name: .NET Core (build pull request)

on: [pull_request]

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
      DOTNET_CLI_TELEMETRY_OPTOUT: true
      DOTNET_NOLOGO: true
    steps:
    - uses: actions/checkout@v2
      with:
        # we need the submodule to zlib.managed.
        submodules: recursive

    - name: .NET core build
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 6.0.100-preview.3.21202.5
    - name: Restore
      run: dotnet restore
      shell: bash

    # we must build the msbuild task 1st in order to prevent build failures
    # due to ProjectReferencing it.
    - name: Build with dotnet
      run: |
        dotnet build --configuration Release --no-restore
        dotnet pack --configuration Release --no-build
      shell: bash

  SecurityScan:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        # we need the submodule to zlib.managed.
        submodules: recursive

    - name: .NET core build
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 6.0.100-preview.3.21202.5

    - name: Restore
      run: dotnet restore
      shell: bash

    # Execute Codacy Analysis CLI and generate a SARIF output with the security issues identified during the analysis
    - name: Run Codacy Analysis CLI
      uses: codacy/codacy-analysis-cli-action@3.0.0
      with:
        # Check https://github.com/codacy/codacy-analysis-cli#project-token to get your project token from your Codacy repository
        # You can also omit the token and run the tools that support default configurations
        project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
        verbose: true
        output: results.sarif
        format: sarif
        # Adjust severity of non-security issues
        gh-code-scanning-compat: true
        # Force 0 exit code to allow SARIF file generation
        # This will handover control about PR rejection to the GitHub side
        max-allowed-issues: 2147483647

    # Upload the SARIF file generated in the previous step
    - name: Upload SARIF results file
      uses: github/codeql-action/upload-sarif@v1
      with:
        sarif_file: results.sarif
